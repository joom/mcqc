# -*- Python -*-
# vim: set filetype=python:
# vim: ts=2:sts=2:sw=2:et:tw=80:

# Configuration file for the 'lit' test runner.
import os
import sys
import re
import platform
import distutils.spawn

try:
  import lit.util
  import lit.formats
except ImportError:
  pass

# name: The name of this test suite.
config.name = 'MCQC'

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(execute_external=False)

# suffixes: A list of file extensions to treat as test files
# Note this can be overridden by lit.local.cfg files
config.suffixes = ['.v']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)

# test_exec_root: The root path where tests should be run.
test_obj_dir = "/tmp/mcqc-tests"
if not os.path.exists(test_obj_dir):
    os.mkdir(test_obj_dir)

config.test_exec_root = test_obj_dir

fc = "FileCheck"
if not distutils.spawn.find_executable(fc):
  # Mac OS with homebrew llvm
  fc = "/usr/local/opt/llvm/bin/FileCheck"

# Substitute mcqc and coq and clang
config.substitutions.append(('%coqc', "coqc -Q %p/../../classes Mcqc"))
config.substitutions.append(('%clean', "rm -rf %p/*.glob %p/.*.aux %p/*.vo ; true" ))
config.substitutions.append(('%mcqc', "stack exec mcqc --stack-yaml %p/../../stack.yaml -- "))
config.substitutions.append(('%clang', "clang++ -O3 -std=c++17 -I%p/../../include"))
config.substitutions.append(('%FC', fc))

# Propogate some environment variable to test environment.
def addEnv(name):
  if name in os.environ:
    config.environment[name] = os.environ[name]

addEnv('HOME')
addEnv('PWD')
# Enable RapidCheck tests, need to have rapidcheck installed
addEnv('RC')

# llvm-gcc on Ubuntu needs to be told where to look
# for headers. If user has these in their environment
# we should propagate to test environment
addEnv('C_INCLUDE_PATH')
addEnv('CPLUS_INCLUDE_PATH')

